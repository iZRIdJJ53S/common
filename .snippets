# apache
tail -5000 /usr/local/apache2/logs/access_log | awk '{print $1}'  | sort | uniq -c | sort -gr | head -5
tail -5000 /usr/local/apache2/logs/access_log | awk '{print $2}'  | sort | uniq -c | sort -gr | head -5
tail -5000 /usr/local/apache2/logs/access_log | awk '{print $12}' | sort | uniq -c | sort -gr | head -5
tail -5000 /usr/local/apache2/logs/access_log | awk '{print $13}' | sort | uniq -c | sort -gr | head -5

# varnishログを確認する
/usr/local/varnish/bin/varnishncsa

# diff 差分ファイル名だけ表示
diff -q -r ${src} ${dst}

# 横表示のdiff
#   -s 差分のある所だけ表示
#   -t タブをスペースで出力
sdiff -st --width=180 ${src} ${dst}

# ファイルのここからここまでを取得したい
sed -n '50,60p' [file_name]

# ディスク使用率の多い順ソート
du -s /home/* | sort -nr | head -30

# ゆっくり処理したい
ionice -c3 nice -n 19 ${command}

# リモートサーバーに直接ファイルを書き込む(tar で圧縮しながら)
tar -zc ./path | ssh server2 "cat > ~/file.tar.gz"


# network search
netstat -tapn | grep ESTABLISHED | more
netstat -tan | grep ":80 " | awk '{print $5}' | awk -F : '{print $4}' | sort | uniq -c | sort -nr | head
lsof -i:80
# 外に出て行くグローバルIPを知りたい時
curl http://checkip.dyndns.com/

# memcache netcat nc
# echo "${memcache のコマンド}" パイプで対象サーバーに渡す
echo "get usericon_upload_locked_44189903" | nc hogehost 11411

# slabs 一覧取得
echo 'stats items' | nc hogehost 11212
# key 一覧取得　「slabID = 1」// 取得したい件数=10
echo 'stats cachedump 1 10' | nc hogehost 11212


# bonding の切り替え試験
# @see http://alpha-netzilla.blogspot.jp/2011/03/blog-post.html
cat /proc/net/bonding/bond0
ifenslave -c bond0 eth1


# 複数のデバイスがあるとき、どれかを知る (NIC の LED を点滅させる)
ethtool -p eth0

# tcpdump -s0 はキャプチャ量の制限無し
tcpdump -i eth0 -A port 80
tcpdump -s0 -A port 80 and host www.google.co.jp
# outbound 外部通信を知りたい時
tcpdump -ni ${INTERFACE} tcp[13] == 2 and src host ${MYIP} and dst port 80 or dst port 443


# dstat
dstat -tclmdrn
dstat --top-cpu --top-cputime
dstat --top-io --top-bio
dstat --top-cpu --top-cputime --top-io --top-mem

# openssl
openssl x509 -noout -modulus -in *.crt | openssl md5
openssl rsa  -noout -modulus -in *.key | openssl md5
openssl req  -noout -modulus -in *.csr | openssl md5

# ランダムパスワード生成
openssl rand -base64 [n]

# git 更新のあったファイル一覧を見たいとき
git log --name-status --oneline

# find
# atime … 最終アクセス時刻 (access time)
# mtime … 最終変更時刻 (modify time)
# ctime … 最終ステータス変更時刻 (change time)
find ./ -daystart -mtime +2
find ./ -daystart -mtime -2

# とあるファイルの更新時刻を基準に検索
find ./ -type f -newer /tmp/_file

# 空の新規ファイル作成 or 既存ファイルを空にする
> test.txt

# 無限ループ
while :;do echo '----------'; uptime; sleep 2; done


# date
date +%Y%m%d
date +%s --date "2005-01-01 00:00"
date --date "@1104505200"

# mysql TABLE ENGINE
SELECT table_name,engine FROM information_schema.tables WHERE table_schema = 'niwavide';
# テーブル定義をコピーしてcreate table
CREATE TABLE usermaster_cs LIKE usermaster;
# mysqldump
mysqldump -uroot -p --default-character-set=utf8 --single-transaction --master-data=2 --hex-blob niwavide | gzip > hoge.sql.gz
# mysql user list
select user,host from mysql.user;
# mysql CHANGE MASTER TO
CHANGE MASTER TO MASTER_HOST='', MASTER_USER='', MASTER_PASSWORD='XXXXX', MASTER_LOG_FILE='mysql-bin.XXXXX', MASTER_LOG_POS=XXXXXX;
# mysqladmin processlist
mysqladmin -uroot -p processlist
# general_log の出力
SET GLOBAL general_log='on';
# mysqldumpslow
mysqldumpslow -s t /var/lib/mysql/mysql-slow.log


# xml構文のチェック
xmllint --noout file.xml

# 開いてるファイルでサイズが大きいのはどれ？
lsof / | awk '{ if($7 > 1048576) print $7/1048576 "MB "$9 }' | sort -n -u | tail

# awk で足し算
awk '{print sum+=$1}' hoge.txt

# ssh you must have a tty to run sudo
ssh -t $host "sudo ls -l"
# nocheck strict
ssh -o StrictHostKeyChecking=no

# macos のDNSキャッシュクリア
sudo killall -HUP mDNSResponder
